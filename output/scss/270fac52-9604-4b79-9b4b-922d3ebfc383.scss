//Адаптивное свойство
$maxWidth: 1920;
// данное значение менять по макету
$maxWidthContainer: 1200;

// minSize - размер, который хотим видеть в итоге на самом маленьком разрешении
// startSize - это размер, который указан в макете
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		//Только если меньше контейнера
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		//Только если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		//Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
// ----------------------------------------
@mixin fz18(){@include adaptiv-value("font-size", 18, 12, 0);}
@mixin lh26(){@include adaptiv-value("line-height", 26, 14, 0);}
// ----------------------------------------
.footer {
    display: block;
    margin-top: 10px;
    background-color: #dbdbdb;
    &_body {
        // font-size: 18px;
        @include fz18();
        // line-height: 24px;
        @include lh26();
        text-align: center;
        padding: 30px 0;
    }

    &_text {
    }

    &_phone {
        a{
            font-weight: 700;
        }
    }
}
