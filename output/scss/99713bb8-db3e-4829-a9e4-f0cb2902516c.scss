// =================================================================
// Responsive Variables
// =================================================================

/////////////////////////// Breakpoints ////////////////////////////

/// Whether or not to print media queries in your stylesheet.
/// If you set this to false, it will print media queries in the
/// order they are declared so that desktop styles will always
/// override mobile styles, regardless of screen size.
/// This is mostly useful for browsers which do not support media queries.
/// @group global
/// @access public
/// @since 1.0.0

// $mqs:                                      true;

/// The window width at which extra small styles will begin.
/// By default, this is set to target most large phones.
/// @group global
/// @access public
/// @since 1.2.0

// $xs:                                       500px;

/// The window width at which small styles will begin.
/// By default, this is set to target most small tablets
/// and iPads in vertical orientation.
/// @group global
/// @access public
/// @since 1.2.0

// $sm:                                       768px;

/// The window width at which medium styles will begin.
/// By default, this is set to target older desktops
/// and iPads in horizontal orientation.
/// @group global
/// @access public
/// @since 1.2.0

// $md:                                       992px;

/// The window width at which large styles will begin.
/// By default, this is set to target most laptops.
/// @group global
/// @access public
/// @since 1.2.0

// $lg:                                       1200px;

/// The window width at which extra large styles will begin.
/// By default, this is set to target most modern desktops.
/// @group global
/// @access public
/// @since 1.2.0

// $xl:                                       1500px;

/// The window width to target for IE8 and below.
/// Because older versions of IE don't support media queries,
/// we use this width to target the most likely browser width
/// an older IE user will be viewing the site in.
/// @group global
/// @access public
/// @since 2.0.0

// $lte-ie8-target-width:                     $lg;

///////////////////////// Container Sizes //////////////////////////

/// The container width for the small (sm) breakpoint.
/// @group layout
/// @access public
/// @since 1.2.0

// $container-sm:                             750px;

/// The container width for the medium (md) breakpoint.
/// @group layout
/// @access public
/// @since 1.2.0

// $container-md:                             970px;

/// The container width for the large (lg) breakpoint.
/// @group layout
/// @access public
/// @since 1.2.0

// $container-lg:                             1170px;

////////////////////////// Stacking Order //////////////////////////

/// A base z-index to use for interactive content in the
/// content area that isn't an overlay. Some examples are
/// callouts that scale up on hover, or tooltip definitions.
/// Use this variable for your default state.
/// Use `+` or `-` with this variable to set z-index relative
/// to the default state - plus for above, minus for below.
/// Change this variable to change the stacking order for
/// all states in the site.
/// @example
/// 		Make sure a callout that scales up on hover is always
/// 		above the other callouts next to it.
/// 			.callout {
///				@include scale( 1 );
///				z-index: $z-index-content;
///
///				&:hover {
///					@include scale( 1.2 );
///					z-index: $z-index-content + 1;
///				}
///			}
/// @group layout
/// @access public
/// @since 2.0.0

// $z-index-content:                          $z-index-1;

/// A base z-index to use for content with multiple states.
/// A good example of this content might be a form with
/// multiple states stacked on one another that you animate.
/// Use this variable for your default state.
/// Use `+` or `-` with this variable to set z-index relative
/// to the default state - plus for above, minus for below.
/// Change this variable to change the stacking order for
/// all states in the site.
/// @example
/// 		Set z-index on a stacked form with states.
/// 			.form-state-start,
///			.form-state-active {
///				z-index: $z-index-states;
///			}
///
///			.form-state-getinfo {
///				z-index: $z-index-states - 1;
///			}
///
///			.form-state-end {
///				z-index: $z-index-states - 2;
///			}
/// @group layout
/// @access public
/// @since 2.0.0

// $z-index-states:                           $z-index-3;

/// A base z-index to use for panel-like content.
/// Panel-like content can include panels that open
/// and close, such as horizontal secondary navigation
/// menus or filters, which push aside or overlap other content.
/// Use this variable alone to set a default z-index which
/// will play nicely with other types of interactive content
/// on your site. Use `+` or `-` with it to set a z-index relative
/// to all panels. Change this variable to change the
/// default z-index for all panel-like content.
/// @example
/// 		Ensure two stacked filters on a degree page overlap correctly.
///			.degree-filter {
///				z-index: $z-index-panels;
///			}
///
///			.degree-subfilter {
///				z-index: $z-index-panels - 1;
///			}
/// @group layout
/// @access public
/// @since 2.0.0

// $z-index-panels:                           $z-index-5;

/// A base z-index to use for the primary navigation.
/// By default, this sets a z-index which will put dropdown
/// menus above content, but below overlays.
/// Use this variable alone to set a default z-index which
/// will play nicely with other types of interactive content
/// on your site. Use `+` or `-` with it to set a z-index relative
/// to the primary navigation. Change this variable to change the
/// stacking order of the primary navigation.
/// @group layout
/// @access public
/// @since 2.0.0

// $z-index-primarynav:                       $z-index-7;

/// A base z-index to use for overlays and lightboxes.
/// This z-index will always be on top unless you are using `$z-index-dev`.
/// Use this variable alone to set a default z-index which
/// will play nicely with other types of interactive content
/// on your site. Use `+` or `-` with it to set a z-index relative
/// to the default overlay. Change this variable to change the
/// stacking order of all overlays. (You may want to do this if you
/// have a fixed sticky navigation so that the sticky navigation isn't
/// always on top, even with lightboxes.)
/// @group layout
/// @access public
/// @since 2.0.0

// $z-index-overlays:                         $z-index-9;

/// A z-index that will override all other z-indexes for development
/// and debugging purposes only. Avoid where possible and do not commit
/// to production code.
/// @group layout
/// @access public
/// @since 2.0.0

// $z-index-dev:                              $z-index-10;

///////////////////////////// Spacing //////////////////////////////

/// The base margin to use sitewide.
/// All margins are based on this number. Larger margins
/// will be a multiple of this, smaller margins will be a
/// fraction of this, except in cases of UI or typography
/// where margin should be related to font size.
/// @group config
/// @access public
/// @since 2.0.0

// $margin:                                   30px;

/// The base margin to use for content sitewide.
/// This affects floated content in the WordPress editor,
/// and would be good for any sort of floated content you
/// may add in a custom theme, like a floated callout.
/// @group config
/// @access public
/// @since 2.0.0

// $margin-small:                             $margin / 2;

/// The base margin to use for large spacing sitewide.
/// This affects elements like the banner, section tags,
/// and any other larger elements.
/// @group config
/// @access public
/// @since 2.0.0

// $margin-large:                             $margin * 2;

/// The base padding to use sitewide.
/// All padding is based on this number. Larger padding
/// will be a multiple of this, smaller padding will be a
/// fraction of this.
/// @group config
/// @access public
/// @since 2.0.0

// $padding:                                  30px;

/// A padding variable for situations where you need a
/// smaller amount of padding.
/// @group config
/// @access public
/// @since 2.0.0

// $padding-small:                            $padding / 2;

/// A padding variable for situations where you need a
/// larger amount of padding.
/// @group config
/// @access public
/// @since 2.0.0

// $padding-large:                            $padding * 2;

////////////////////////////// Colors //////////////////////////////

/// A color to tint your grays with.
/// Affects grayscale variables. Try cool colors, like blues.
/// Accepts any valid color.
/// @group config
/// @type color
/// @access public
/// @since 2.0.0

// $tint-hue:                                 none;

/// The amount to tint your grays, from 0-100%.
/// This will affect the maximum saturation of your tint.
/// @group config
/// @access public
/// @since 2.0.0

// $tint-saturation:                          15%;

///////////////////////////// Borders //////////////////////////////

/// The default border style.
/// @group global
/// @access public
/// @since 1.2.0

// $border:                                   1px solid $color-grayscale-d;

// =================================================================
// Responsive Styles
// =================================================================

@import "normalize/import-now";
@import "math";
@import "burf-base/config";

// =================================================================
// Custom Variables (Styles should not go in this file)
// =================================================================
