.toc {
  // ==========================================================================
  //    Variables
  // ==========================================================================

  // Allow the block's base class to be used at all scopes within the block.
  // (bn = block name), use as: #{$bn}.
  $bn: &;

  $TOCwidth: 250px;
  $itemHeight: auto;

  @mixin toc-item-spacing {
    padding: 0.4rem 1rem 0.4rem 0.4rem;
    margin: 0 0 0.4rem;
  }

  // ==========================================================================
  //    Styles
  // ==========================================================================

  // Note that this block applies styles directly to HTML tags instead of to
  // classes as recommended by the BEM approach. This is because the TOC HTML
  // used to build the block is automatically generated by Hugo from markdown,
  // and as such, doesn't have any classes applied.

  @include desktop {
    display: grid;
    grid-template-columns: minmax($TOCwidth, 0.4fr) auto;
    gap: 1rem;
  }

  // Very large screens, allow the TOC to stretch to the side
  @media only screen and (min-width: ($max-content-width + (2 * $TOCwidth) + 20)) {
    margin-left: -$TOCwidth;
  }

  &__toc-container {
    margin: 0 0.5rem 2rem 0;
  }

  // Includes the TOC title, list & button
  &__toc {
    @include desktop {
      width: $TOCwidth;
      margin-top: 4rem;
    }

    &--affixed-mobile {
      z-index: 3;
      position: fixed;
      top: 0;
      left: 0;
      background-color: $body-color;
      width: 100%;
      display: grid;
      grid-template-columns: auto 70px;
      padding: 0;
      box-shadow: -22px 1px 11px $lightest-black;
      // when the button is visible
      #{$bn}__button {
        display: block;
        visibility: visible;
        text-align: center;
        color: $text-color-dark;
        height: auto;
        padding: 0.4rem 0.4rem 1rem;
        max-height: 4rem;
        height: 2.5rem;
      }
      // undo properties for desktop
      @include desktop {
        position: relative;
        background-color: unset;
        width: $TOCwidth;
        display: block;
        left: auto;
        padding-top: 0;
        box-shadow: none;

        #{$bn}__button {
          display: none;
          visibility: hidden;
        }
      }
    }

    &--affixed-desktop {
      @include desktop {
        position: fixed;
        top: 0;
        z-index: 3;
        width: $TOCwidth;
      }
    }

    // The TOC list
    ol,
    ul {
      margin: 0;
      padding-inline-start: 0;
      margin-block-end: 0;
      text-decoration: none;

      // the active item on mobile when menu is closed
      &[aria-hidden="true"] li.active {
        margin-bottom: 0;
      }
      // all items when menu is open
      &[aria-hidden="false"] li {
        @include toc-item-spacing;
        opacity: 1;
        visibility: visible;
        height: $itemHeight;
      }
    }

    a {
      height: 100%;
      text-decoration: none;
      font-weight: 600;
      font-size: 0.9rem;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      color: $text-color-dark;

      a:visited,
      a:hover,
      a:active {
        color: $text-color-dark;
      }
    }

    li {
      display: block;
      opacity: 0;
      visibility: hidden;
      transition: height 0.18s 0s ease-in-out, opacity 0.1s 0.17s ease-in-out, margin 0.18s 0s ease-in-out;
      height: 0;
      overflow: hidden;
      margin: 0;
      padding: 0;

      // Sub-lists generally (& when parent is not active, invisible)
      ol,
      ul {
        transition: max-height 0.18s 0s ease-in-out, opacity 0.1s 0.17s ease-in-out, margin 0.18s 0s ease-in-out;
        height: auto;
        margin: 0;
        max-height: 0;
        overflow: hidden;
        opacity: 0;

        // Sub-list items
        li {
          // Active sub-list items
          &.active {
            background-color: transparent;
            border-left: none;
            box-shadow: none;
            a,
            a:visited,
            a:hover,
            a:active {
              color: $light-teal;
            }
          }

          a,
          a:visited,
          a:hover,
          a:active {
            color: $text-color;
          }
        }
        // Last item of sub-lists
        li:last-child {
          margin-bottom: 0;
        }
      }

      &.active {
        box-shadow: 0 3px 8px $light-light-black, 0 0 2px $light-black;
        border-radius: $border-radius;
        filter: brightness(1.04);
        background-color: $body-color;
        border-left: 4px solid $light-teal;
        margin-left: -4px;
        opacity: 1;
        visibility: visible;
        height: $itemHeight;
        @include toc-item-spacing;

        a,
        a:visited,
        a:hover,
        a:active {
          color: $text-color-dark;
        }

        // sub-lists when parent is active (visible)
        ol,
        ul {
          max-height: 500px;
          margin-top: 1rem;
          opacity: 1;
        }
      }
    }
  }

  &__button {
    // start as hidden
    display: none;
    visibility: hidden;
    // removes default browser styles for button elements
    border: none;
    margin: 0;
    text-decoration: none;
    background: none;
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;

    &:focus {
      outline: none;
    }

    &::-moz-focus-inner {
      border: 0;
    }
  }

  &__button-icon {
    stroke: $text-color-dark;
    > svg {
      width: 24px;
      height: 24px;
      stroke-width: 1.5;
      stroke-linecap: round;
      stroke-linejoin: round;
    }
  }

  &__content {
    margin-left: 1.5rem;
    > p {
      min-width: 100%;
      width: 0;
    }
  }
}
