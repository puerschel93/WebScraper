// General mixins =================================================================

//Generate shadow
@mixin shadow($size: 5px, $bg-color: $tertiary, $color: $tertiary) {
    @if (lightness($bg-color) > lightness($color)) {
        box-shadow: 0px $size ($size+3) color($color, light);
    } @else {
        box-shadow: 0px $size ($size+3) color($color, sdark);
    } 
}

//Style logo
@mixin logo {
    text-align: center;
    font-family: $title-font;
    font-size: $title-size * 1.3;

    @include tablet-only {
        font-size: $title-size * $coeff;
    }

    @include desktop-only {
        font-size: $title-size * 1.3 * $coeff;
    }
}

//Center all elements in the box
@mixin center-in-box {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

//Flex and between
@mixin flex-between {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

//Button like
@mixin like-enable {
    z-index: 20;
    background: -webkit-linear-gradient(bottom, color($secondary), color($primary));
    background-clip: text;
    -webkit-background-clip:text;
    color: transparent;
}

//Style for cards container - card of restaurants, items of menu, step of working, ...
@mixin card-style {
    @include center-in-box;
    @include shadow;
    
    position: relative;
    flex-direction: row;
    border-radius: $card-corner;
    background-color: $card-bg;

    &:not(:last-of-type) {
        margin-bottom: $card-bottom-spacing;
    }

    &:last-of-type {
        margin-bottom: $card-bottom-spacing * 1.2;
    }

    a {
        width: 100%;
        height: inherit;
    }
}

//add ... on text in box too small
@mixin dots {
    overflow: hidden;
    width: 100%;
    white-space: nowrap;
    text-overflow: ellipsis;
}

//Basic ::after or ::before for animations
@mixin pseudo-element {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    z-index: 10;
    opacity: 0;
}

// Specific mixins ==================================================================

//Generate pseudo element ::before for number of step
@mixin step-number($number) {
    @for $i from 1 through $number {
        &.step-#{$i}::before {
            content: "#{$i}";
            position: absolute;
            left: -(math.div($icon-size, 2));
            background: color($primary);
            width: $icon-size;
            height: $icon-size;
            border-radius: 100%;
            text-align: center;
            line-height: $icon-size;
            color: color($tertiary, light);
            z-index: 20;
        }
    }
}

//Generate selector for manage delay and display elements on menu pages
@mixin display-menu-animation {
    @for $i from 0 through $number-section-menu {
        &--#{$i + 1} {
            animation: display-menu 1.1s $section-menu-delay * $i ease-in-out both;

            @for $j from 1 through $number-dishes {
                .menu-section__content--#{$j} {
                    animation: display-menu 0.5s (($card-menu-delay * $j) + ($section-menu-delay * $i)) ease-in-out both;
                }
            }
        }
    }
}


