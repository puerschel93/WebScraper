@use '~@liveperson-design-system/tokens/scss/border-radius';
@use '~@liveperson-design-system/tokens/scss/colors';
@use '~@liveperson-design-system/tokens/scss/colors-light';
@use '~@liveperson-design-system/tokens/scss/common';
@use '~@liveperson-design-system/tokens/scss/helpers';
@use '~@liveperson-design-system/tokens/scss/spacing';
@use '~@liveperson-design-system/tokens/scss/transparency';
@use '~@liveperson-design-system/tokens/scss/typography';

@include common.base-styles;

:host {
  --color-border: #{transparency.$light-4};
  --color-border--hover: #{colors.$navy-white};
  --color-border--active: #{colors.$blue};
  --color-border--disabled: #{transparency.$light-1};

  --color-outline: #{colors.$focus-outline};

  --color-bg: #{transparency.$light-1};

  --color-text: #{colors.$navy-white};

  --input-text-align: left;
  --input-padding-v: spacing.$space-xs;
  --input-padding-h: spacing.$space-s;

  position: relative;
  display: inline-flex;
  @include typography.with-font-family;
  @include typography.input-value;
  color: var(--color-text);
}
:host([theme="light"]) {
  --color-border: #{colors-light.$navy-light};
  --color-border--hover: #{colors-light.$navy};
  --color-border--active: #{colors-light.$blue};
  --color-border--disabled: #{transparency.$dark-1};

  --color-outline: #{colors-light.$focus-outline};

  --color-bg: #{colors-light.$white};

  --color-text: #{colors-light.$navy-dark};
}

@include helpers.host-with-attr(error) {
  --color-border: #{colors.$red-light};
}
@include helpers.host-with-attr(error, '[theme="light"]') {
  --color-border: #{colors-light.$red};
}

@include helpers.host-with-attr(readOnly) {
  --input-padding-h: 0;
}

:host([textAlign="center"]) {
  --input-text-align: center;
}
:host([textAlign="right"]) {
  --input-text-align: right;
}

$icon-size: helpers.get-em(16px);
$icon-offset: helpers.get-em(spacing.$space-xs);

textarea {
  flex-grow: 1;
  max-width: 100%;
  font: inherit;
  text-align: var(--input-text-align);
  min-height: 82px;
  color: inherit;
  border: 1px solid var(--color-border);
  outline: none;
  border-radius: border-radius.$border-radius-xxs;
  background: var(--color-bg);
  box-shadow: none;
  -webkit-tap-highlight-color: rgba(#fff, 0);
  padding: var(--input-padding-v) var(--input-padding-h);
  margin: 0;
  resize: none;
  transition: all .15s ease-out;

  // States
  &[disabled] {
    opacity: transparency.$disabled;
  }

  &:not([disabled]) {
    &:hover {
      border-color: var(--color-border--hover);
    }

    &:active,
    &:focus {
      border-color: var(--color-border--active);
    }

    &:focus {
      box-shadow: var(--color-outline);
    }

    &[readOnly] {
      border-color: transparent;
      background-color: transparent;
      box-shadow: none;

      $padding-size-with-icon: $icon-size + $icon-offset;

      &.with-icon-left {
        padding-left: $padding-size-with-icon;
      }

      &.with-icon-right {
        padding-right: $padding-size-with-icon;
      }
    }

    &:not([readOnly]) {
      :host([resizable]:not([resizable="false"])) & {
        resize: vertical;
      }
    }
  }

  $padding-size-with-icon: $icon-size + var(--input-padding-h) + $icon-offset;

  &.with-icon-left {
    padding-left: $padding-size-with-icon;
  }

  &.with-icon-right {
    padding-right: $padding-size-with-icon;
  }
}

slot {
  &[name^="icon-"] {
    display: flex;
    align-items: center;
    position: absolute;
    top: 0;
    height: 38px;
    user-select: none;
    pointer-events: none;
    transition: all .15s ease-out;

    &[name$="left"] {
      left: var(--input-padding-h);
    }

    &[name$="right"] {
      right: var(--input-padding-h);
    }

    :host([error]:not([error="false"])) & {
      color: var(--color-border);
    }
  }
}
