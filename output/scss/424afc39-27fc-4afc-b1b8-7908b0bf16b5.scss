@import '../sass';

/* =Board and Thread
 *------------------------------*/
.opWrapper {
  color: $opColor;
  //background-color: $opBackgroundColor;
  border-top: $opBorderTopColor solid 1px;

  @if $shadows >= 2 {
    //Replaced by gradient at .opCell's bottom
    //box-shadow: 0px #{-($shadowsRadius *1.5)} #{$shadowsRadius * 3} #{-$shadowsRadius * 1.5} $shadowsColor; 
    //box-shadow: 0px 0 ($shadowsRadius * 2) -($shadowsRadius) $shadowsColor;
    //border-top-color: soften-lightness($opBorderTopColor, $bodyBgColor, 30);
  }

  //border-bottom: $opRegularBorder; //set by .labelOmission instead
  /* Special border */
  border-left: 5px /* ($opPaddingLeft - $defaultPadding) */ solid $postOpSpecialBorderColor;
}

$postMessageVerticalPadding: $defaultPadding * 1.2;

$postReplyBorderColor: intensify($replyBgColor, palette('fgMain'), 7%);
@mixin postReplyBorder() {
  border-width: 1px;
  border-color: $postReplyBorderColor;
  border-style: none solid solid none;
}
.postReply {
  border: solid 1px;
  color: $replyColor;
  background-color: $replyBgColor;
  @include postReplyBorder;
  @if $shadows >= 2 {
    box-shadow: ($shadowsRadius / 2) ($shadowsRadius / 3) $shadowsRadius -($shadowsRadius / 3) $shadowsColor;
    border-color: soften-lightness($postReplyBorderColor, $bodyBgColor, (400 * $shadowsAlpha) );
  }
  margin-left: $replyMarginLeft;
  //margin-right: $replyMarginRight; //Deactivated, causes body overflow
}

@function chue($val) {
  @return hue($val);
}

@if $markedPost {
  .markedPost .postReply {
    background-color: $markedPostBgColor;
  }
  .markedPost .postReplyHeader .postHeaderInner {
    border-bottom-color: take-color($postReplyBorderColor, $markedPostBgColor);
  }
}


/* Containers
------------------------------*/
/* opCell contains the whole thread, not just the Op */
.opCell {
  padding-bottom: $defaultPadding * 2.5;
  @if $shadows >= 2 {
    &:not(:last-of-type) {
      background: transparent linear-gradient(to top, rgba($shadowsBaseColor, $shadowsAlpha * 0.6), $bodyBgColor 0.8em) no-repeat;
    }
  }
}
.postCell {
  margin-top: $defaultPadding / 2.3;
}

.uploadCell {
  display: inline-table;
  padding-right: $postInternalPadding;
  margin: ($postInternalPadding / 2) 0 0 0;
  //max-width:  $thumbSize;
  //max-height: $thumbSize;
  &:not(:first-child) {
    margin-left: $postInternalPadding;
  }
}

/* =Uploads
------------------------------*/
.panelUploads {
  float: left;
  border-collapse: collapse;
  margin-right: $postInternalPadding * 2;

  .imgLink {
    display: table-cell;
    min-width: 1em;
    min-height: 1em;

    // Disables outline when unzooming image,
    //  but possible accessibility issue.
    outline: none; 
  }

}

.imgExpanded, .inlineVideo {
  max-width: 100%;
  width: 100%;
}

.uploadPlaceholder {
  background-color: $uploadPlaceholderBgColor;
  border: 2px dashed $uploadPlaceholderBorderColor;
  border-radius: 2px;
  padding: $defaultPadding;

  text-align: center;
  .uploadPlaceholderInner {
    display: inline-block;
    vertical-align: middle;
  }

  .uploadPlaceholderInner:before {
    @include fa-icon;
    font-size: 2em;
  }
  &.image {
    @include font-awesome-icon($fa-var-file-image-o);
  } 
  &.video  {
    @include font-awesome-icon($fa-var-file-video-o);
  }
  &.audio  {
    @include font-awesome-icon($fa-var-file-audio-o);
  } 

}

$minimizeButtonWidth: 1em;
.videoContainer {
  margin-left: $minimizeButtonWidth / 2;
  display: block;
  position: relative; // To capture absolutely positioned .minimizeButton
}

.minimizeButton {
  width: $minimizeButtonWidth;
  height: $minimizeButtonWidth;
  display: block;
  position: absolute;
  top: 0;// $internalPadding;
  left: -$minimizeButtonWidth;// $internalPadding;

  cursor: pointer;
  @include fa-icon;
  color: $softerColor;
}

/* File info
------------------------------*/
$fileInfoEms: 0.8; // inherited from <small>

.panelUploads {
  .fileInfo {
    display: table-caption;
    caption-side: bottom;

    //line-height: 0.9em;
    overflow: hidden;
    position: relative;
  }

  /* eg. 21502435.jpg */
  .nameLink {
    margin-right: 1em;
  }
  /* eg. 41.02 KB */
  .sizeLabel {
    display: inline-block;
    vertical-align: bottom;
    margin-right: 1em;
  }
  /* eg. 395x526 */
  .dimensionLabel {

  }

  // alias filename
  .originalNameLink {
    display: inline-block;
    max-width: $thumbSize - (8 * $emMostCommonPxSize * $fileInfoEms); //Fallback
    max-width: calc(#{$thumbSize} - 8em);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis; /* requires all the above properties */
    vertical-align: bottom;

    margin-right: 0.8em;

  }

  .fileInfoInner {
    display: block;
    width: 100%;

    border-bottom: 1px solid transparent;
    opacity: 0;
    @if $animationSpeed {
      transition: opacity ($animationSpeed * 0.5) ease-in-out;
    }
    overflow: hidden;
  }
}

.opWrapper .uploadCell:hover .fileInfoInner {
  opacity: 1;
  border-bottom-color: $postOpInnerBorderColor;
}
.postCell .uploadCell:hover .fileInfoInner {
  opacity: 1;
  border-bottom-color: $postReplyInnerBorderColor;
}

$postHeaderMarginBottom: $postMessageVerticalPadding * 0.7;

// Fill width when post has multiple files
.multipleUploads .panelUploads {
  display: block;
  width: 100%;
}

.opWrapper, .postCell {
  display: block;

  article{
    display: inline-block;
  }


  /* Makes the text go under the image if the space available next to it
   *  becomes narrower than $textBumperWidth */
  $textBumperWidth: 10em;
  .textBumper {
    //display: inline-block;
    display: none; //TODO 
    height: 0px;
    width: $textBumperWidth;
  }
  .textBumperReturn {
    height: 0px;
    line-height: 0px;
  }


  .postOp, .postReply {
    // Only required by .divMessage { word-wrap }
    max-width: 100%;
  }

  .messageWrap {
    margin-top: -$postHeaderMarginBottom;
    padding: 0 $postInternalPadding $postHeaderMarginBottom ($defaultPadding * 1.8);
  }
  .divMessage {
    display: inline;

    // Requires  a {max-}width value on .divMessage and .post{Op|Reply}
    word-wrap: break-word;
    max-width: 100%;

    text-align: top;
    //margin: 0 0 $defaultPadding 0;
  }
}

.labelOmission {
  $topBorderSize: 1px;
  $padding-top: $postInternalPadding / 3; 
  padding-top: $padding-top;
  $margin-left: $postOpMarginLeft;
  margin-left: $margin-left;
  padding-left: $defaultPadding + -$postOpMarginLeft;
  //margin-top: -$topBorderSize; // Compensate so it looks like the border is part of .opWrapper
  //border-top: solid $topBorderSize $postOpInnerBorderColor;

  color: soften-lightness(palette('fgMain'), palette('bgMain'), 70);
  font-size: $smallFontSize * 1.1;
  &:before {
    display: block;
    content: "";
    height: 1px;
    background: linear-gradient(to right,  $postOpInnerBorderColor 30%,rgba(0,0,0,0) 100%);

  margin-left: $postOpMarginLeft + $margin-left;
  margin-top: calc(-#{$topBorderSize} - #{$padding-top}); // Compensate so it looks like the border is part of .opWrapper
  }
}

/* =Header (post)
------------------------------------------------------------*/
$postHeaderSmallFontSize: $smallFontSize;

.postOpHeader, .postOpHeader a, .fileInfo {
  color: $postOpHeaderColor;
}
.postReplyHeader, .postReplyHeader a, .fileInfo {
  color: $postReplyHeaderColor;
}
.postOpHeader a, .postReplyHeader a {
  &:hover {
    color: $linkHoverColor;
  }
}

$postModActionWidth: 1.5em; //deletion checkbox or dropdown menu arrow, MAGIC
.postOpHeader, .postReplyHeader {

  margin-bottom: $postHeaderMarginBottom;

  // header items
  ul {
    display: inline-block;
    //float: left;
    position: relative;
    list-style: none;
    padding: 0 0 0 0;//0.15em 0 0 0;
    margin: 0 0 0 0.5em;
  }
  li {
    display: inline-block;
    margin-right: 0.5em;
    &:last-child {
      margin-right: 0.3em;
    }
  }

  .labelCreated, .spanId {
    font-size: $postHeaderSmallFontSize;
  }
  .linkSelf {
    font-size: (1em + $postHeaderSmallFontSize) / 2;
  }
  .spanId {
    margin-left: -0.1em; //Compensate for bigger name and role fonts
  }

  .linkPreviewWrap {
    display: none; /* That link is pretty much useless for end-users */
  }

}
.postOpHeader {
  background-color: $opHeaderBackgroundColor;
}
.postOpHeader .postHeaderInner {
  display: inline-block;
  border-bottom: 1px solid $postOpInnerBorderColor;
}
.postReplyHeader {
  display: inline-block;
  background-color: $replyHeaderBackgroundColor;
}
.postReplyHeader .postHeaderInner {
  display: inline-block;
  border-bottom: 1px solid $postReplyInnerBorderColor;
}
li.deletionCheckBoxWrap {
  display: inline-block;
  position: relative;
  margin-top: 0.2em;
  //height: 1em;
  width: 1em;
}
input[type='checkbox'].deletionCheckBox {
  display: inline;
  //float: left;
}

.postHeaderInnerAfter {
  display: inline-block;
}

.postHeader .mention {
  color: $mentionColor;
  font-size: $smallFontSize;
  margin: 0 ($internalPadding / 2) 0 ($internalPadding / 2);
}

/* =Post Content
------------------------------------------------------------*/
.postContent {
  padding: 0 0 0 $postInternalPadding;
}

@if $underlineQuotes {
  .quoteLink, .postHeader .mention {
    text-decoration: underline;
  }
  .quoteLink {
    margin-right: 0.15em; // To show demarcation between links, >>84>>59
  }
}

.labelLastEdit {
  font-size: $smallFontSize;
  color: $softerColor;
  margin-left: $internalPadding;
}


/* =Preview
------------------------------------------------------------*/
.postPreviewTooltip {
  display: inline-block;
  z-index: 10;
  //@include postReplyBorder;

  max-width: 100%;

  background: $replyBgColor;

  @if $shadows {
    @include tooltipShadows();
  }

  .postReply {
    margin-left: 0;
    //padding-bottom: $postInternalPadding;
  }
  .deletionCheckBoxWrap {
    display: none;
  }
  .postContent {
    padding: 0;
  }

}

.loadingPreview {
  color: $softerColor;
}

/* =Misc
------------------------------------------------------------*/
.postsBottomAnchor {
  transform: translateY(-40em);
}
