@use 'sass:color';

$thick-border: 2px solid #344861;
$thin-border: 1px solid #aaa;
$valid: #3fb950;
$warn: #fe8a4f;
$invalid: #dc3545;
$hover-invalid: #bb2d3b;
$info: #0d6efd;
$hover-info: #0b5ed7;
$focused-cell-bg: #bbdefb;
$hover-cell-bg: #ddeeff;
$white: #fff;
$text: #344861;
$transition-properties: 0.15s ease-in-out;

* {
	box-sizing: border-box;
}

html,
body {
	padding: 0;
	margin: 0;

	min-height: 100%;
	width: 100%;

	color: $text;
	background-color: $white;

	user-select: none;
}

.App {
	padding: 5px;
	font-size: 2.2em;
	font-family: 'Open Sans', 'Open-Sans', sans-serif;

	display: grid;
	grid-template:
		'sudoku inputs'
		'solve solve'
		'clear clear';

	justify-content: center;
	align-items: center;
	flex-direction: column;

	width: 100%;
	min-height: 100%;
}

.invalid-input {
	color: $invalid;
}

.sudoku {
	/*
  display: flex;
  flex-direction: column; */
	grid-area: sudoku;

	display: grid;
	grid-template: repeat(9, 1fr) / repeat(9, 1fr);

	width: 80vmin;
	height: 80vmin;
	min-height: 80vmin;
	min-width: 80vmin;
	max-height: 80vmin;
	max-width: 80vmin;
	border: $thick-border;
	border-width: 1px;
	border-radius: 2px;
}
.cell {
	border: $thin-border;
	text-align: center;

	display: flex;
	flex: 1 1 0;
	justify-content: center;
	align-items: center;
	cursor: pointer;

	&:nth-child(3n) {
		border-right: $thick-border;
	}
	&:nth-child(9n + 1) {
		border-left: $thick-border;
	}

	@for $i from 0 through 2 {
		$lower-limit: $i * 3 * 9 + 1;
		$upper-limit: 81 - (($i * 3 + 1) * 9) + 1;

		&:nth-child(n + #{$lower-limit}):nth-last-child(n + #{$upper-limit}) {
			border-top: $thick-border;
		}
	}

	&:nth-child(n + 73) {
		border-bottom: $thick-border;
	}

	&.focused-cell {
		// Don't let it be overriden by :hover in @media rule below
		background-color: $focused-cell-bg !important;
	}
}

.solve {
	border: 2px solid $info;
	color: $info;

	grid-area: solve;

	&:hover {
		color: $white;
		background-color: $info;
	}
}

.clear {
	border: 2px solid $invalid;
	color: $invalid;

	grid-area: clear;

	&:hover {
		color: $white;
		background-color: $invalid;
	}
}

.solve,
.clear {
	font: inherit;

	border-radius: 5px;
	background: none;
	margin-top: 10px;
	width: 80vmin;
	outline: none;

	cursor: pointer;

	transition: $transition-properties transform,
		$transition-properties background-color, $transition-properties color;

	&:active {
		transform: scale(0.98, 0.98);
	}
}

.keyboardless-inputs {
	grid-area: inputs;
	margin-left: 4px;
	border-radius: 3px;
	border: $thick-border;

	.keyboardless-input {
		text-align: center;

		width: 1.5em;
		height: 1.5em;

		display: flex;
		align-items: center;
		justify-content: center;

		cursor: pointer;

		transition: $transition-properties background-color;

		border-bottom: $thick-border;

		&:last-child {
			border-bottom: none;
		}

		&:hover {
			background-color: #e9ecef;
		}

		.svg-eraser-fill {
			width: 0.8em;
			height: 0.8em;
		}
	}
}

@media (min-width: 1001px) {
	.cell:hover {
		// Only here because it doesn't work and looks weird on mobile
		background-color: $hover-cell-bg;
	}
}

@media (max-width: 1000px) {
	.App {
		grid-template:
			'sudoku'
			'solve'
			'clear'
			'inputs';
	}

	.clear,
	.solve {
		font-size: 50px;
	}

	.App {
		font-size: 50px;
	}

	.keyboardless-inputs {
		margin-top: 10px;
		border-radius: 5px;
		justify-self: center;

		font-size: 75px;

		width: max-content;

		display: grid;
		grid-gap: 2px;
		box-sizing: border-box;

		.keyboardless-input {
			box-shadow: 0 0 0 2px #344861;
			border-bottom: none;
		}

		grid-template: repeat(4, 1fr) / repeat(3, 1fr);

		.input-eraser {
			grid-area: 4 / 2;
		}
	}
}

@font-face {
	font-family: 'Open sans';
	src: local('Open Sans'), local('Open-Sans'),
		url('../public/fonts/OpenSans-Regular.ttf') format('TrueType');
}
