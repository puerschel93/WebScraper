// -----------------------------------------------------------------------------
//   Reveal animations for all pages
// -----------------------------------------------------------------------------

@use 'sass:math';

// This animates all the page elements into their normal locations:
//
// 1. The primary menu bar and site name fade in at the same time as the site
//    name slides up out from the top of the primary menu bar.
//
// 2. The primary menu bar contents slide up and fade in as all remaining
//    regions (.i.e. content) do the same.
//
// Additional notes:
//
// - Note the use of animation-fill-mode: backwards; which causes the start
//   state to be applied to elements before the animation has actually started,
//   i.e. for delayed animations.
//
// - Some animations start out with visibility: hidden; on the first frame
//   and then set visibility: visible; on the subsequent frame. This is done so
//   that the element cannot be interacted with, either with pointers, keyboard,
//   or other means. This primarly avoids the issue of clicks registering on
//   invisible elements.

///
/// Reveal overlay animation duration.
///
/// The reveal overlays are used both to fade in the entire site, and also on
/// the front page to reveal just the content after the site name and menu bar
/// animations are finished.
///
$reveal-overlay-animation-duration: 0.5s;

///
/// Site reveal overlay animation delay.
///
/// This should be just long enough that most browsers will have already done
/// most of their layout rendering and most DOMContentLoaded JavaScript has
/// (hopefully) finished executing so the reveal animation has a better chance
/// of playing smoothly and without too many frames dropped.
///
$site-reveal-overlay-animation-delay: 0.5s;

///
/// Site name reveal animation duration.
///
$site-name-reveal-animation-duration: 0.8s;

///
/// Site name reveal animation delay.
///
/// This should be just long enough that most browsers will have already done
/// most of their layout rendering and most DOMContentLoaded JavaScript has
/// (hopefully) finished executing so the reveal animation has a better chance
/// of playing smoothly and without too many frames dropped.
///
$site-name-reveal-animation-delay: 0.5s;

///
/// Primary menu region reveal animation duration.
///
$region-primary-menu-reveal-animation-duration: 0.5s;

///
/// Primary menu region reveal animation delay.
///
/// This should be just long enough that most browsers will have already done
/// most of their layout rendering and most DOMContentLoaded JavaScript has
/// (hopefully) finished executing so the reveal animation has a better chance
/// of playing smoothly and without too many frames dropped.
///
$region-primary-menu-reveal-animation-delay: 0.5s;

///
/// Primary menu block .menu element reveal animation duration.
///
/// This is applied to .menu elements inside the primary menu region, not the
/// region itself.
///
$region-primary-menu-block-menu-reveal-duration: 0.5s;

///
/// Primary menu block .menu element reveal animation delay.
///
$region-primary-menu-block-menu-reveal-delay: 0.5s;

///
/// Content reveal animation duration.
///
$content-reveal-duration: 0.5s;

///
/// Content reveal animation delay.
///
/// This includes the primary menu region animation delay and half of that
/// region's animation duration so that the content animation starts when the
/// primary menu region is almost done animating but doesn't wait until it's
/// actually done so as to keep the flow going.
///
$content-reveal-animation-delay:
  $region-primary-menu-reveal-animation-delay +
  math.div($region-primary-menu-reveal-animation-duration, 2);

///
/// The point at which all the site reveal animations are nearly complete.
///
/// This is useful to be able to run additional animations in the page content
/// when the content becomes visible and not too early.
///
$site-revealed:
  $site-reveal-overlay-animation-delay +
  math.div($reveal-overlay-animation-duration, 2);

///
/// Site reveal overlay keyframes.
///
@keyframes reveal-overlay {
  0% {
    opacity:        1;
    pointer-events: auto;
    visibility:     visible;
  }
  1% {
    pointer-events: none;
  }
  99% {
    opacity:    0;
  }
  100% {
    visibility: hidden;
  }
}

///
/// Site name reveal animation keyframes.
///
@keyframes site-name-reveal {
  0% {
    // The calc() is to account for the drop shadow around the site name.
    transform:  translateY(calc(100% + 1em));
  }

  100% {
    transform:  none;
  }
}

///
/// Primary menu .block element overflow hiding animation keyframes.
///
/// This is applied to the .block while the .menu element(s) translate
/// vertically so that the .menu contents don't start visibly outside the .block
/// element.
///
@keyframes primary-menu-block-overflow {
  0% {
    overflow: hidden;
  }
  100% {
    overflow: hidden;
  }
}

///
/// Primary menu block .menu reveal animation keyframes.
///
@keyframes primary-menu-block-menu-reveal {
  0% {
    visibility: hidden;
    opacity:    0;
    transform:  translateY(20%);
  }
  1% {
    visibility: visible;
  }
  100% {
    opacity:    1;
    transform:  translateY(0);
  }
}

///
/// Primary menu block .menu reveal animation keyframes without motion.
///
@keyframes primary-menu-block-menu-reveal-no-motion {
  0% {
    visibility: hidden;
    opacity:    0;
  }
  1% {
    visibility: visible;
  }
  100% {
    opacity:    1;
  }
}

body:not(.maintenance-page) .site-name {
  animation-name:             site-name-reveal;
  animation-duration:         $site-name-reveal-animation-duration;
  animation-timing-function:  $easing-decelerate;
  animation-fill-mode:        backwards;
  animation-delay:            $site-name-reveal-animation-delay;

  // Don't animate if the user indicates they prefer reduced motion.
  //
  // @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion
  @media (prefers-reduced-motion: reduce) {
    animation: none;
  }
}

body:not(.maintenance-page) .region-primary-menu .block {
  animation-name:             primary-menu-block-overflow;
  animation-duration:         $region-primary-menu-block-menu-reveal-duration;
  animation-fill-mode:        backwards;
  animation-delay:            $region-primary-menu-block-menu-reveal-delay;

  > .menu:not(.menu--overflow-measure-shadow) {
    animation-name:             primary-menu-block-menu-reveal;
    animation-duration:         $region-primary-menu-block-menu-reveal-duration;
    animation-timing-function:  $easing-standard;
    animation-fill-mode:        backwards;
    animation-delay:            $region-primary-menu-block-menu-reveal-delay;

    // Only animate opacity if the user indicates they prefer reduced motion.
    //
    // @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion
    @media (prefers-reduced-motion: reduce) {
      animation-name:           primary-menu-block-menu-reveal-no-motion;
    }
  }
}

// This is used to fade in the entire page. Currently used by the front page
// reveal animations.
body:not(.maintenance-page) .layout-container::before,
// This is used to fade in the page content as it's far more performant than
// fading in the content itself, presumably because browsers naively animate the
// whole content area, including the parts that are off-screen - on some pages,
// there is a substantial amount of content off-screen.
body:not(.maintenance-page) .region-highlighted::before {
  @supports (pointer-events: none) {
    content: '';

    display: block;

    position: fixed;

    left:   0;
    right:  0;
    top:    0;
    bottom: 0;

    @include set-colours($background: $background-colour-light);

    @include on-dark-colour-scheme {
      @include set-colours($background: $background-colour-dark);
    }

    visibility: hidden;
    pointer-events: none;

    opacity: 0;

    animation-duration:         $reveal-overlay-animation-duration;
    animation-timing-function:  linear;
    animation-fill-mode:        backwards;
  }
}
body:not(.maintenance-page) .region-highlighted::before {
  @supports (pointer-events: none) {
    animation-name:   reveal-overlay;
    animation-delay:  $site-reveal-overlay-animation-delay;
  }
}
