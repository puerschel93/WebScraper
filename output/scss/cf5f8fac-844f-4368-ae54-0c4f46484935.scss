// Fonts
@mixin font-face($font-family, $url, $weight, $style) {
	@font-face {
		font-family: "#{$font-family}";
		src: url("../fonts/#{$url}.woff2") format("woff2"), url("../fonts/#{$url}.woff") format("woff");
		font-weight: #{$weight};
		font-display: swap;
		font-style: $style;
	}
}
// Adaptive Value
@mixin adaptive-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		// Только если меньше контейнера
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		// Только если больше контейнера
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		// Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
	}
}
// MediaQuerys
@mixin maxwidth($maxWidth) {
	@media (max-width: $maxWidth+px) {
		@content;
	}
}
@mixin minwidth($minWidth) {
	@media (min-width: $minWidth+px) {
		@content;
	}
}
