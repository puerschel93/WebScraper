// @describe grid-base()

// @it output base styles using fallback gutter
grid-base()

// @expect
.grid {
  margin-left: -20px;
}
.grid__item {
  padding-left: 20px;
  box-sizing: border-box;
  vertical-align: top;
  display: inline-block;
  width: 100%;
}

// @it output base styles when passed a gutter as px
$grid--gutter = 10px
grid-base()

// @expect
.grid {
  margin-left: -10px;
}
.grid__item {
  padding-left: 10px;
  box-sizing: border-box;
  vertical-align: top;
  display: inline-block;
  width: 100%;
}

// @it output base styles when passed a gutter as em
$grid--gutter = 1em
grid-base()

// @expect
.grid {
  margin-left: -1em;
}
.grid__item {
  padding-left: 1em;
  box-sizing: border-box;
  vertical-align: top;
  display: inline-block;
  width: 100%;
}

// @it output base styles when passed a gutter as %
$grid--gutter = 10%
grid-base()

// @expect
.grid {
  margin-left: -10%;
}
.grid__item {
  padding-left: 9.09090909090909%;
  box-sizing: border-box;
  vertical-align: top;
  display: inline-block;
  width: 100%;
}

// @it 20% gutter should give 16.6% padding to each grid item
$grid--gutter = 20%
grid-base()

// @expect
.grid {
  margin-left: -20%;
}
.grid__item {
  padding-left: 16.666666666666668%;
  box-sizing: border-box;
  vertical-align: top;
  display: inline-block;
  width: 100%;
}

// @it output base styles expecting uncompressed html
$grid--html-compressed = false
grid-base()

// @expect
.grid {
  margin-left: -20px;
  letter-spacing: -0.25em;
}
.grid__item {
  padding-left: 20px;
  box-sizing: border-box;
  vertical-align: top;
  display: inline-block;
  width: 100%;
  letter-spacing: normal;
}

// @describe grid-gutter-modifier()

// @it output a grid gutter modifier to allow for extra grids, with custom gutters
grid-gutter-modifier('foo', 1em)
grid-gutter-modifier('bar', 10%)

// @expect
.grid--foo {
  margin-left: -1em;
}
.grid--foo > .grid__item {
  padding-left: 1em;
}
.grid--bar {
  margin-left: -10%;
}
.grid--bar > .grid__item {
  padding-left: 9.09090909090909%;
}

// @it output a grid gutter modifier without specifing a namespace
grid-gutter-modifier('', 10px)

// @expect
.grid {
  margin-left: -10px;
}
.grid > .grid__item {
  padding-left: 10px;
}

// @describe grid-reverse()

// @it output styles to visually reverse grid item order
grid-reverse()

// @expect
.grid--reverse {
  direction: rtl;
  text-align: right;
}
.grid--reverse > .grid__item {
  direction: ltr;
  text-align: left;
}

// @it output styles to visually reverse grid item order, prefixed with modifiers
grid-reverse('desktop')

// @expect
.grid--desktop-reverse {
  direction: rtl;
  text-align: right;
}
.grid--desktop-reverse > .grid__item {
  direction: ltr;
  text-align: left;
}

// @describe grid-widths()

// @it output grid widths from whole width, through to sixteenths
grid-widths('', 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16)

// @expect
.one-whole{width:100%}
.one-half{width:50%}
.one-third{width:33.3333%}
.two-thirds{width:66.6667%}
.one-quarter{width:25%}
.two-quarters{width:50%}
.three-quarters{width:75%}
.one-fifth{width:20%}
.two-fifths{width:40%}
.three-fifths{width:60%}
.four-fifths{width:80%}
.one-sixth{width:16.6667%}
.two-sixths{width:33.3333%}
.three-sixths{width:50%}
.four-sixths{width:66.6667%}
.five-sixths{width:83.3333%}
.one-seventh{width:14.2857%}
.two-sevenths{width:28.5714%}
.three-sevenths{width:42.8571%}
.four-sevenths{width:57.1429%}
.five-sevenths{width:71.4286%}
.six-sevenths{width:85.7143%}
.one-eighth{width:12.5%}
.two-eighths{width:25%}
.three-eighths{width:37.5%}
.four-eighths{width:50%}
.five-eighths{width:62.5%}
.six-eighths{width:75%}
.seven-eighths{width:87.5%}
.one-ninth{width:11.1111%}
.two-ninths{width:22.2222%}
.three-ninths{width:33.3333%}
.four-ninths{width:44.4444%}
.five-ninths{width:55.5556%}
.six-ninths{width:66.6667%}
.seven-ninths{width:77.7778%}
.eight-ninths{width:88.8889%}
.one-tenth{width:10%}
.two-tenths{width:20%}
.three-tenths{width:30%}
.four-tenths{width:40%}
.five-tenths{width:50%}
.six-tenths{width:60%}
.seven-tenths{width:70%}
.eight-tenths{width:80%}
.nine-tenths{width:90%}
.one-eleventh{width:9.0909%}
.two-elevenths{width:18.1818%}
.three-elevenths{width:27.2727%}
.four-elevenths{width:36.3636%}
.five-elevenths{width:45.4545%}
.six-elevenths{width:54.5455%}
.seven-elevenths{width:63.6364%}
.eight-elevenths{width:72.7273%}
.nine-elevenths{width:81.8182%}
.ten-elevenths{width:90.9091%}
.one-twelfth{width:8.3333%}
.two-twelfths{width:16.6667%}
.three-twelfths{width:25%}
.four-twelfths{width:33.3333%}
.five-twelfths{width:41.6667%}
.six-twelfths{width:50%}
.seven-twelfths{width:58.3333%}
.eight-twelfths{width:66.6667%}
.nine-twelfths{width:75%}
.ten-twelfths{width:83.3333%}
.eleven-twelfths{width:91.6667%}
.one-thirteenth{width:7.6923%}
.two-thirteenths{width:15.3846%}
.three-thirteenths{width:23.0769%}
.four-thirteenths{width:30.7692%}
.five-thirteenths{width:38.4615%}
.six-thirteenths{width:46.1538%}
.seven-thirteenths{width:53.8462%}
.eight-thirteenths{width:61.5385%}
.nine-thirteenths{width:69.2308%}
.ten-thirteenths{width:76.9231%}
.eleven-thirteenths{width:84.6154%}
.twelve-thirteenths{width:92.3077%}
.one-fourteenth{width:7.1429%}
.two-fourteenths{width:14.2857%}
.three-fourteenths{width:21.4286%}
.four-fourteenths{width:28.5714%}
.five-fourteenths{width:35.7143%}
.six-fourteenths{width:42.8571%}
.seven-fourteenths{width:50%}
.eight-fourteenths{width:57.1429%}
.nine-fourteenths{width:64.2857%}
.ten-fourteenths{width:71.4286%}
.eleven-fourteenths{width:78.5714%}
.twelve-fourteenths{width:85.7143%}
.thirteen-fourteenths{width:92.8571%}
.one-fifteenth{width:6.6667%}
.two-fifteenths{width:13.3333%}
.three-fifteenths{width:20%}
.four-fifteenths{width:26.6667%}
.five-fifteenths{width:33.3333%}
.six-fifteenths{width:40%}
.seven-fifteenths{width:46.6667%}
.eight-fifteenths{width:53.3333%}
.nine-fifteenths{width:60%}
.ten-fifteenths{width:66.6667%}
.eleven-fifteenths{width:73.3333%}
.twelve-fifteenths{width:80%}
.thirteen-fifteenths{width:86.6667%}
.fourteen-fifteenths{width:93.3333%}
.one-sixteenth{width:6.25%}
.two-sixteenths{width:12.5%}
.three-sixteenths{width:18.75%}
.four-sixteenths{width:25%}
.five-sixteenths{width:31.25%}
.six-sixteenths{width:37.5%}
.seven-sixteenths{width:43.75%}
.eight-sixteenths{width:50%}
.nine-sixteenths{width:56.25%}
.ten-sixteenths{width:62.5%}
.eleven-sixteenths{width:68.75%}
.twelve-sixteenths{width:75%}
.thirteen-sixteenths{width:81.25%}
.fourteen-sixteenths{width:87.5%}
.fifteen-sixteenths{width:93.75%}

// @it output grid widths, prefixed with modifiers
grid-widths('desktop', 1)

// @expect
.desktop-one-whole {
  width: 100%;
}

// @it output grid widths for IE7
$grid--width-expression = true
grid-widths('', 1 2)

// @expect
.one-whole {
  width: expression((this.parentNode.clientWidth * 1 - parseInt(this.currentStyle["paddingLeft"]) - parseInt(this.currentStyle["paddingRight"]) - (parseInt(this.currentStyle["borderLeftWidth"]) || 0) - (parseInt(this.currentStyle["borderRightWidth"]) || 0) ) + "px")
}

.one-half {
  width: expression((this.parentNode.clientWidth * 0.5 - parseInt(this.currentStyle["paddingLeft"]) - parseInt(this.currentStyle["paddingRight"]) - (parseInt(this.currentStyle["borderLeftWidth"]) || 0) - (parseInt(this.currentStyle["borderRightWidth"]) || 0) ) + "px")
}

// @it output custom names for grid widths to allow for i18n
$grid--count-names = uno dos tres
$grid--fraction-names = primero segundo tercero

grid-widths('', 1 2 3)

// @expect
.uno-primero {
  width: 100%;
}
.uno-segundo {
  width: 50%;
}
.uno-tercero {
  width: 33.3333%;
}
.dos-terceros {
  width: 66.6667%;
}

// @describe grid-pull()

// @it output grid widths from whole width, through to sixteenths
grid-pull('', 1 2)

// @expect
[class*='pull-'] {
  position: relative;
}
.pull-one-whole{
  right: 100%;
}
.pull-one-half{
  right: 50%;
}

// @it output grid widths, prefixed with modifiers
grid-pull('desktop', 1)

// @expect
[class*='desktop-pull-'] {
  position: relative;
}
.desktop-pull-one-whole {
  right: 100%;
}

// @it output custom names for grid widths to allow for i18n
$grid--count-names = uno dos tres
$grid--fraction-names = primero segundo tercero

grid-pull('', 1 2 3)

// @expect
[class*='pull-'] {
  position: relative;
}
.pull-uno-primero {
  right: 100%;
}
.pull-uno-segundo {
  right: 50%;
}
.pull-uno-tercero {
  right: 33.3333%;
}
.pull-dos-terceros {
  right: 66.6667%;
}


// @describe grid-push()

// @it output grid widths from whole width, through to sixteenths
grid-push('', 1 2)

// @expect
[class*='push-'] {
  position: relative;
}
.push-one-whole{
  left: 100%;
}
.push-one-half{
  left: 50%;
}

// @it output grid widths, prefixed with modifiers
grid-push('desktop', 1)

// @expect
[class*='desktop-push-'] {
  position: relative;
}
.desktop-push-one-whole {
  left: 100%;
}

// @it output custom names for grid widths to allow for i18n
$grid--count-names = uno dos tres
$grid--fraction-names = primero segundo tercero

grid-push('', 1 2 3)

// @expect
[class*='push-'] {
  position: relative;
}
.push-uno-primero {
  left: 100%;
}
.push-uno-segundo {
  left: 50%;
}
.push-uno-tercero {
  left: 33.3333%;
}
.push-dos-terceros {
  left: 66.6667%;
}
