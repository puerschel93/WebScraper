// ============================================================
// CAUTION: Some of the mixin require Kouto-Swiss
// ============================================================

// ============================================================
// Vertical Rhythm calculate line height feeling nice
// ------------------------------------------------------------
// Requirement: $font-size-base
// follow $unit-size-base when the variable is setted
// Usage: vertical-rhythm: true
// set font-size before this function if the selector has own font-size
// ============================================================
vertical-rhythm(value)
  if value == true
    $unit-size-base ?= $font-size-base * 1.8
    lh = $unit-size-base
    lh-calc(lh, $unit-size-base)
      if @font-size > (lh / 1.5)
        lh = lh + ($unit-size-base / 2)
        return lh-calc(lh, $unit-size-base)
      else
        return lh
    line-height: lh-calc(lh, $unit-size-base)
  else
    error('expected a `vertical-rhythm: true`, but got ' + val)
// ============================================================
// Rhythmical Margin and Padding create margin and padding by vertical ryhthm
// ------------------------------------------------------------
// Rhythmical space is used by rythmical margin and padding
// just calculating proper value of space
// Requirement: $font-size-base
// follow $unit-size-base when the variable is setted
// Usage: rhtymical-margin: 1 0 1 0
// same position of ordinaly short hand(top right bottom left)
// ============================================================
rhythmical-space(value)
 $unit-size-base ?= $font-size-base * 1.8
 return $unit-size-base * value
rhythmical-margin(with-margin-top = 0, with-margin-right = 0, with-margin-bottom = 0, with-margin-left = 0)
  if with-margin-top > 0
    margin-top: rhythmical-space(with-margin-top)
  if with-margin-right > 0
    margin-right: rhythmical-space(with-margin-right)
  if with-margin-bottom > 0
    margin-bottom: rhythmical-space(with-margin-bottom)
  if with-margin-left > 0
    margin-left: rhythmical-space(with-margin-left)
rhythmical-padding(with-padding-top = 0, with-padding-right = 0, with-padding-bottom = 0, with-padding-left = 0)
  if with-padding-top > 0
    padding-top: rhythmical-space(with-padding-top)
  if with-padding-right > 0
    padding-right: rhythmical-space(with-padding-right)
  if with-padding-bottom > 0
    padding-bottom: rhythmical-space(with-padding-bottom)
  if with-padding-left > 0
    padding-left: rhythmical-space(with-padding-left)
// ============================================================
//  Debugger
// ============================================================
//  Usage: just include
// ------------------------------------------------------------
debugger()
  background-color: rgba(255, 0, 0, 0.2)
// ============================================================
//  bold font with smooth option
// ============================================================
//  Usage: text-bold: true
// ------------------------------------------------------------
text-bold(change-smoothing = true)
  font-weight: bold
  if change-smoothing
    -webkit-font-smoothing: subpixel-antialiased
    -moz-osx-font-smoothing: auto
  else
   -webkit-font-smoothing: antialiased
   -moz-osx-font-smoothing: auto
// ============================================================
//  Line Marker, to make decoration like a maker under the text
// ============================================================
// Usage: line-marker: true <color>
// Use colorcode when 2nd argument has
// Use $amount-base when setted global(33% if not)
// ------------------------------------------------------------
line-marker(value, marker-color = $bg-color-emphasis)
  $amount-base ?= 33%
  if value == true
    padding-left: .125em
    padding-right: .125em
    margin-left: .125em
    margin-right: .125em
    background-image: linear-gradient(transparent $amount-base, marker-color ( $amount-base * 2))
  else
    error('expected a `link-maker: true`, but got ' + value)
// ============================================================
// Link variation, to make link setting like visited, hover, etc
// ============================================================
// Usage:include link-variation: <color> <boolean>
// Use color when 1st argument has, default is followed color property
// fix color and no decoration when 2nd argument is true
// Use $amount-base when setted global(33% if not)
// ------------------------------------------------------------
link-variation(link-color = @color, color-fix = false)
  $amount-base ?= 33%
  a
    color: link-color
    text-decoration: none
    &:visited
      if color-fix
        color: link-color
      else
        color: shade(link-color, $amount-base)
      font-weight: normal
    &:hover, &:focus
      border-bottom: 1px solid
      text-decoration: none
    &:active
      if color-fix
        color: invert(link-color)
      else
        color: complement(link-color)
// ============================================================
// full-width: contents in container be full width of view
// ============================================================
// Usage: full-width: true
// ------------------------------------------------------------
full-width(value)
  if value == true
    margin-left: calc(((100vw - 100%) / 2) * -1)
    margin-right: calc(((100vw - 100%) / 2) * -1)
    padding-left: calc((100vw - 100%) / 2)
    padding-right: calc((100vw - 100%) / 2)
  else
    error('expected a `full-width: true`, but got ' + value)

// ============================================================
// z-depth: add shodow of z-depth from material design
// ============================================================
// Usage: z-depth: <integer>(must be 1..6)
// ------------------------------------------------------------
z-depth(value)
  if value == 1
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)
  else if value == 2
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)
  else if value == 3
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23)
  else if value == 4
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22)
  else if value == 5
    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22)
  else if value == 6
    box-shadow: 0 24px 48px rgba(0, 0, 0, 0.3), 0 20px 14px rgba(0, 0, 0, 0.22)
  else
    error('renge of ' + z-depth + ' must be 1..6 , but got ' + value)
// // ============================================================
// // zurui gradietion
// // ============================================================
// // usage:include link-color-fixed(basecolor, lightercolor);
// // ------------------------------------------------------------
// // FIXME: not to use palette
// gradient-top-lighten($color = $palette('Grey', '700'), $lighten = 10%)
//   background-color: $color
//   filter-gradient(lighten($color, $lighten), $color, vertical)
//   background-image(linear-gradient(lighten($color, $lighten) 0%, $color 100%))
// gradient-top-darken($color = $palette('Grey','700'), $darken = 10%)
//   background-color: $color
//   filter-gradient(darken($color, $darken), $color, vertical)
//   background-image(linear-gradient(darken($color, $darken) 0%, $color 100%))
// // ============================================================
// // zurui box-shadow
// // ============================================================
// // usage:include zurui-box(kosa);
// // ------------------------------------------------------------
// // FIXME: not to use palette
// zurui-box($shadow = 0.15)
//   box-shadow: rgba(0, 0, 0, $shadow) 0 0 2px
// rich-box($shadow = 0.2)
//   box-shadow: rgba(0, 0, 0, $shadow) 0 0 0 20px inset
// deboss-box($border = 0.1, $shadow = 0.05, $highlight = 0.8)
//   border 1px solid rgba(0, 0, 0, $border)
//   box-shadow rgba(0, 0, 0, $shadow) -1px 1px 2px inset, rgba(255, 255, 255, $highlight) -1px 1px 0
// emboss-box($border = 0.1, $shadow = 0.05, $highlight = 0.5)
//   border: 1px solid rgba(0, 0, 0, $border)
//   box-shadow: rgba(0, 0, 0, $shadow) -1px 1px 0, rgba(255, 255, 255, $highlight) -1px 1px 0 inset
// button($color = #ff5622, $font-size = 16px, $pure-white)
//   display: inline-block
//   background-origin: border-box
//   position: relative
//   font-weight: bold
//   ts-000(0.1)
//   gradient-top-lighten($color, 5%)
//   border-radius(4px)
//   emboss-box()
//   color: rgba($text-color, 0.9)
//   text-align: center
//   font-size: $font-size
//   padding: 0 $font-size * 2
//   height: ($font-size * 3)
//   line-height: ($font-size * 3)
//   i
//     font-size: 130%
//     margin-right: 5px
//     color: rgba($text-color, 0.5)
//   &:hover
//     gradient-top-lighten(lighten($color, 5%), 5%)
//     text-decoration: none
//     color: $text-color
//     i
//       color: $text-color
//   &:active
//     gradient-top-lighten($color, 5%)
//     top: 1px
