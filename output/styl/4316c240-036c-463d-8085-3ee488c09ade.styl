TextBoxLikeElementsHeightSizing = { Types: { fixed: "FIXED", natural: "NATURAL" } }
overrideObject(TextBoxLikeElementsHeightSizing, {

  singleObjectTypeParameterPropertiesValidation: {

    type: {
      type: DataTypes.string,
      required: true,
      allowedValues: values(TextBoxLikeElementsHeightSizing.Types)
    },
    fixedHeight: {
      type: DataTypes.unit,
      requiredIf: {
        predicate: @(heightSpecification) { return heightSpecification.type == TextBoxLikeElementsHeightSizing.Types.fixed },
        descriptionForLogging: "The 'type' is 'TextBoxLikeElementsHeightSizing.Types.fixed'"
      }
    },

    topOrBottomEqualBordersWidths: {
      type: DataTypes.unit,
      incompatibleWith: "topBorderWidth" "bottomBorderWidth"
    },
    topBorderWidth: {
      type: DataTypes.unit
    },
    bottomBorderWidth: {
      type: DataTypes.unit
    },
    explicitBorderNoneDeclarationRequired: {
      type: DataTypes.boolean
    },

    topOrBottomEqualPaddings: {
      type: DataTypes.unit,
      incompatibleWith: "topPadding" "bottomPadding"
    },
    topPadding: {
      type: DataTypes.unit
    },
    bottomPadding: {
      type: DataTypes.unit
    },
    paddingsOffset: {
      type: DataTypes.unit
    },
    equalComputedPaddings: {
      type: DataTypes.boolean,
      defaultValue: false
    },
    explicitPaddingZeroDeclarationRequired: {
      type: DataTypes.boolean
    },

    fontFamily: {
      type: DataTypes.string
    },
    fontSize: {
      type: DataTypes.unit
      defaultValue: BASIC_FONT_SIZE
    },
    lineSpacing: {
      type: DataTypes.unit
    },
    lineHeight: {
      type: DataTypes.unit,
      incompatibleWith: "lineHeight"
    },
    linesCount: {
      type: DataTypes.unit
      defaultValue: 1
    },

    fixateHeight: {
      type: DataTypes.boolean
    }
  },

  computeTotalHeight: @(textBoxLikeElementsHeightSizingSpecification) {

    validateSingleParametersObject({
      targetObject: textBoxLikeElementsHeightSizingSpecification,
      propertiesSpecification: TextBoxLikeElementsHeightSizing.singleObjectTypeParameterPropertiesValidation,
      restParameters: null,
      mixinOrFunctionName: "textBoxLikeElementsHeightSizing"
    })

    textBoxLikeElementsHeightSizingSpecification


    if isNotNull(textBoxLikeElementsHeightSizingSpecification.fixedHeight) {
      return textBoxLikeElementsHeightSizingSpecification.fixedHeight
    }
  }
})


specifyTextBoxLikeElementsHeightSizing(specification, restParameters__MUST_NOT_BE...)

  validateSingleParametersObject({
    targetObject: specification,
    propertiesSpecification: TextBoxLikeElementsHeightSizing.singleObjectTypeParameterPropertiesValidation,
    restParameters: restParameters__MUST_NOT_BE,
    mixinOrFunctionName: "specifyTextBoxLikeElementsHeightSizing"
  })

  return {
    sizingType: specification.type,
    fixedHeight: specification.fixedHeight,

    topOrBottomEqualBordersWidths: specification.topOrBottomEqualBordersWidths,
    topBorderWidth: specification.topBorderWidth,
    bottomBorderWidth: specification.bottomBorderWidth,
    explicitBorderNoneDeclarationRequired: specification.explicitBorderNoneDeclarationRequired,

    topOrBottomEqualPaddings: specification.topOrBottomEqualPaddings,
    topPadding: specification.topPadding,
    bottomPadding: specification.bottomPadding,
    paddingsOffset: specification.paddingsOffset,
    explicitPaddingZeroDeclarationRequired: specification.explicitPaddingZeroDeclarationRequired,

    fontFamily: specification.fontFamily
    fontSize: specification.fontSize
    linesCount: specification.linesCount
    lineSpacing: specification.lineSpacing
    lineHeight: specification.lineHeight,

    fixateHeight: specification.fixateHeight
  }


textBoxLikeElementsHeightSizing(specification, restParameters__MUST_NOT_BE...)

  validateSingleParametersObject({
    targetObject: specification,
    propertiesSpecification: TextBoxLikeElementsHeightSizing.singleObjectTypeParameterPropertiesValidation,
    restParameters: restParameters__MUST_NOT_BE,
    mixinOrFunctionName: "textBoxLikeElementsHeightSizing"
  })

  sizingType = specification.type
  fixedHeight = specification.fixedHeight

  topOrBottomEqualBordersWidths = specification.topOrBottomEqualBordersWidths
  topBorderWidth = specification.topBorderWidth
  bottomBorderWidth = specification.bottomBorderWidth
  explicitBorderNoneDeclarationRequired = specification.explicitBorderNoneDeclarationRequired

  topOrBottomEqualPaddings = specification.topOrBottomEqualPaddings
  topPadding = specification.topPadding
  bottomPadding = specification.bottomPadding
  paddingsOffset = specification.paddingsOffset
  explicitPaddingZeroDeclarationRequired = specification.explicitPaddingZeroDeclarationRequired

  fontFamily = specification.fontFamily
  fontSize = specification.fontSize
  linesCount = specification.linesCount
  lineHeight = substituteWhenNull(specification.lineHeight, linesCount == 1 ? fontSize : BASIC_LINE_HEIGHT_IN_MULTILINE_TEXT_BLOCKS)

  lineSpacing = specification.lineSpacing

  if (isNull(lineSpacing))

    lineHeight__dimensionalValue = isUnitlessNumber(lineHeight) ? lineHeight * fontSize : lineHeight

    lineSpacing = linesCount > 1 ?\
        buildCalcExpression(\
          "${lineHeight__dimensionalValue} - ${fontSize}",\
          { lineHeight__dimensionalValue: lineHeight__dimensionalValue, fontSize: fontSize }\
        ) : 0

  fixateHeight = specification.fixedHeight

  computeTotalHeight = TextBoxLikeElementsHeightSizing.computeTotalHeight

  computeTotalHeight(specification)


  // --- Borders -------------------------------------------------------------------------------------------------------
  if isNull(topOrBottomEqualBordersWidths) && isNull(topBorderWidth) &&\
      isNull(bottomBorderWidth) && isTrue(explicitBorderNoneDeclarationRequired)

    border-top none
    border-bottom none

  else if isNotNull(topOrBottomEqualBordersWidths)

    border-top-width topOrBottomEqualBordersWidths
    border-bottom-width topOrBottomEqualBordersWidths

  else

    if isNotNull(topBorderWidth)

      border-top-width topBorderWidth

    else if isTrue(explicitBorderNoneDeclarationRequired)

      border-top none


    if isNotNull(bottomBorderWidth)

      border-bottom-width bottomBorderWidth

    else if isTrue(explicitBorderNoneDeclarationRequired)

      border-bottom none


  // --- Paddings ------------------------------------------------------------------------------------------------------
  if sizingType == TextBoxLikeElementsHeightSizing.Types.natural

    if isNull(topOrBottomEqualPaddings) && isNull(topPadding) &&\
        isNull(bottomPadding) && isTrue(explicitPaddingZeroDeclarationRequired)

      padding-top 0
      padding-bottom 0

    else if isNotNull(topOrBottomEqualPaddings)

      padding-top topOrBottomEqualPaddings
      padding-bottom topOrBottomEqualPaddings

    else

      if isNotNull(topPadding)

        padding-top topPadding

      else if isTrue(explicitPaddingZeroDeclarationRequired)

        padding-top 0


      if isNotNull(bottomPadding)

        padding-bottom bottomPadding

      else if isTrue(explicitPaddingZeroDeclarationRequired)

        padding-bottom 0


  // --- Font ----------------------------------------------------------------------------------------------------------
  font-size: fontSize
  line-height lineHeight


  // --- Height --------------------------------------------------------------------------------------------------------
  if sizingType == TextBoxLikeElementsHeightSizing.Types.natural

    height = buildCalcExpression(\
      "${topBorderWidth} + ${bottomBorderWidth} + " +\
      "${topPadding} + ${bottomPadding} + " +\
      "${linesCount}*${fontSize} + ${lineSpacing}*(${linesCount} - 1)",\
      {
        topBorderWidth: nullToZero(topBorderWidth),
        bottomBorderWidth: nullToZero(bottomBorderWidth),
        topPadding: nullToZero(topPadding),
        bottomPadding: nullToZero(bottomPadding),
        linesCount: linesCount,
        fontSize: fontSize,
        lineSpacing: lineSpacing
      }
    )

    if fixedHeight

      height height


  if sizingType == TextBoxLikeElementsHeightSizing.Types.fixed

    height fixedHeight
